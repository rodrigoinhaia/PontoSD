# Build stage
FROM node:18-alpine AS builder

WORKDIR /usr/src/app

# Instala dependências necessárias
RUN apk add --no-cache \
    curl \
    postgresql-client

# Copia os arquivos de configuração
COPY package*.json ./
COPY tsconfig.json ./

# Instala as dependências
RUN npm ci

# Copia o código fonte
COPY . .

# Compila o código
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /usr/src/app

# Instala dependências necessárias
RUN apk add --no-cache \
    curl \
    postgresql-client

# Copia os arquivos de configuração e dependências
COPY package*.json ./
RUN npm ci --only=production

# Copia o código compilado
COPY --from=builder /usr/src/app/dist ./dist

# Cria diretórios necessários
RUN mkdir -p logs uploads

# Define variáveis de ambiente
ENV NODE_ENV=production

# Expõe a porta
EXPOSE ${PORT}

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Comando para iniciar em modo de produção
CMD ["npm", "start"] 